syntax = "proto3";

package cura.plugins.proto;

// TODO: Move proto defintions to a separate repo
// TODO: Add error propagation
// TODO: Add progress reporting
// TODO: Add priority queueing (if multiple plugins are hooked up to the slot)


// These are the different slots that plugins can hook into
enum SlotID {
  UNKNOWN = 0;
  SIMPLIFY = 1;
  POSTPROCESS = 2;
}

// ---------------------------------------------------------------------
// This is the message which is sent to the plugin to request identification
service Plugin {
  rpc Identify(PluginRequest) returns (PluginResponse) {}
}

message PluginRequest {
  SlotID id = 1;
}

// This is the message which is sent back to CuraEngine to identify and validate the plugin
message PluginResponse {
  string plugin_hash = 1;
  string version = 2;
}

// ---------------------------------------------------------------------
// Some basic types that are used in the messages below
message Point_2d {
  sint64 x = 1;
  sint64 y = 2;
}

message Polygon {
  repeated Point_2d path = 1;
}

message Polygons {
  repeated Polygon paths = 1;
}

// ---------------------------------------------------------------------
// The SIMPLIFY slot request message

service Simplify {
  rpc Simplify(SimplifyRequest) returns (SimplifyResponse) {}
}

message SimplifyRequest {
  Polygons polygons = 1;
  uint64 max_deviation = 2;
  uint64 max_angle = 3;
}

// The SIMPLIFY slot response message
message SimplifyResponse {
  Polygons polygons = 1;
}

// ---------------------------------------------------------------------
// The POSTPROCESS slot request message

service Postprocess {
  rpc Postprocess(PostprocessRequest) returns (PostprocessResponse) {}
}

message PostprocessRequest {
  string gcode_word = 1;
}

// The POSTPROCESS slot response message
message PostprocessResponse {
  string gcode_word = 1;
}